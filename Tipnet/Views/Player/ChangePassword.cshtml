@model Tipnet.DTOs.NewPasswordDTO

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <script src="~/Scripts/jquery-1.12.4.js"></script>
}

<h2>ChangePassword</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Promjeni password</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        
        @* Ovdje koristim NewPasswordDTO da ne pravim novi DTO pa u PrGuid upisujem trenutni password *@
        <div class="form-group">
            @Html.Label("Stari password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrGuid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrGuid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { id = "txtPassword", onkeyup = "CheckPasswordStrength(this.value)", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div id="password-strength" class="progress-bar">Strong</div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function CheckPasswordStrength(password) {
            var passwordStrength = document.getElementById("password-strength");

            //TextBox left blank.
            if (password.length === 0) {
                passwordStrength.innerHTML = "&nbsp;";
                passwordStrength.style.width = 0;
                return;
            }

            //Regular Expressions.
            var regex = new Array();
            regex.push("[A-Z]"); //Uppercase Alphabet.
            regex.push("[a-z]"); //Lowercase Alphabet.
            regex.push("[0-9]"); //Digit.
            regex.push("[$@@!%*#?&]"); //Special Character.

            var passed = 0;

            //Validate for each Regular Expression.
            for (var i = 0; i < regex.length; i++) {
                if (new RegExp(regex[i]).test(password)) {
                    passed++;
                }
            }

            //Validate for length of Password.
            if (passed > 3 && password.length > 8) {
                passed++;
            }

            //Display status.
            var color = "";
            var strength = "";
            var width = "";

            switch (passed) {
            case 0:
            case 1:
                strength = "Weak";
                color = "red";
                width = "5%";
                break;
            case 2:
                strength = "Good";
                color = "darkorange";
                width = "15%";
                break;
            case 3:
            case 4:
                strength = "Strong";
                color = "green";
                width = "20%";
                break;
            case 5:
                strength = "Very Strong";
                color = "darkgreen";
                width = "30%";
                break;
            }
            passwordStrength.innerHTML = strength;
            passwordStrength.style.backgroundColor = color;
            passwordStrength.style.width = width;
        }
    </script>


}